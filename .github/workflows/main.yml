# This is a basic workflow to help you get started with Actions

name: Flutter Cloud Build

# Controls when the workflow will run
on:
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
    inputs:
      version_name:
        description: app version name
        required: true

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
      - name: Setup Java
        uses: actions/setup-java@v2
        with:
          java-version: '12'
          distribution: 'adopt'
      - name: Install Flutter Engine
        uses: subosito/flutter-action@v1
      - name: Get Pub Packages
        run: flutter pub get
      - name: Create releases directory
        run: mkdir -p build/releases
      - name: Build splited apks
        run: |
          flutter build apk --release --split-per-abi
          cp build/app/outputs/apk/release/*.apk build/releases
      - name: Build apk without splitting
        run: |
          flutter build apk --release
          cp build/app/outputs/apk/release/*.apk build/releases
      - name: Create app bundle
        run: |
          flutter build appbundle --release
          cp build/app/outputs/bundle/release/*.aab build/releases
      - name: Release app
        uses: ncipollo/release-action@v1
        with:
          artifacts: 'build/releases/*.*'
          name: ${{ github.event.inputs.version_name }}
          tag: ${{ github.event.inputs.version_name }}
          token: ${{ secrets.GITHUB_TOKEN }}
